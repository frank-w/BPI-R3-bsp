# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches:
    - 'r3-atf'
    - 'r3-uboot'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout ATF-Branch
        uses: actions/checkout@v3
        with:
          ref: r3-atf

      - name: Checkout UBoot-Branch
        uses: actions/checkout@v3
        with:
          ref: r3-uboot

      - name: Install depencies
        run: |
          sudo apt update
          sudo apt install ccache libssl-dev u-boot-tools python-mako gcc-arm-linux-gnueabihf gcc-aarch64-linux-gnu make

      - name: Setup env
        run: |
          echo "DT=$(date +'%Y-%m-%d_%H%M')" >> $GITHUB_ENV
          echo "UBOOTVER=$(make ubootversion)" >> $GITHUB_ENV
          echo "BRANCH=${GITHUB_REF##*/}" >> $GITHUB_ENV

      - name: Print env
        run: |
          echo $BRANCH $UBOOTVER $DT

      - name: Setup cache
        id: cache
        uses: actions/cache@v2
        with:
          path: ~/.ccache
          key: ${{ runner.os }}-ccache
          restore-keys: ${{ runner.os }}-ccache

      - name: Build for bananapi-r3 sd
        run: |
          export PATH=/usr/lib/ccache:$PATH
          bash build.sh importconfig
          bash build.sh build
          git checkout r3-atf
          bash build.sh importconfig
          bash build.sh build
          ls -lh build/mt7986/release/
          mv build/mt7986/release/bl2.img bl2_sd.img
          mv build/mt7986/release/fip.bin fip_sd.bin
          git checkout r3-uboot

      - name: Build for bananapi-r3 emmc
        run: |
          export PATH=/usr/lib/ccache:$PATH
          echo "device=emmc" > build.conf
          bash build.sh importconfig
          bash build.sh build
          git checkout r3-atf
          echo "device=emmc" > build.conf
          bash build.sh importconfig
          bash build.sh build
          mv build/mt7986/release/bl2.img bl2_emmc.img
          mv build/mt7986/release/fip.bin fip_emmc.bin
          git checkout r3-uboot

      - name: Build for bananapi-r3 spi-nand
        run: |
          export PATH=/usr/lib/ccache:$PATH
          echo "device=spi-nand" > build.conf
          bash build.sh importconfig
          bash build.sh build
          git checkout r3-atf
          echo "device=spim_nand" > build.conf
          bash build.sh importconfig
          bash build.sh build
          mv build/mt7986/release/bl2.img bl2_spi-nand.img
          mv build/mt7986/release/fip.bin fip_spi-nand.bin
          git checkout r3-uboot

      - name: Build for bananapi-r3 spi-nor
        run: |
          export PATH=/usr/lib/ccache:$PATH
          echo "device=spi-nor" > build.conf
          bash build.sh importconfig
          bash build.sh build
          git checkout r3-atf
          echo "device=spim_nor" > build.conf
          bash build.sh importconfig
          bash build.sh build
          mv build/mt7986/release/bl2.img bl2_spi-nor.img
          mv build/mt7986/release/fip.bin fip_spi-nor.bin
          git checkout r3-uboot

      - name: Upload binaries to release
        #if: startsWith(github.ref,'r3-')
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          automatic_release_tag: "CI-BUILD-${{ env.BRANCH }}-${{ env.UBOOTVER }}-${{ env.DT }}"
          prerelease: false
          title: "Build for branch ${{ env.BRANCH }} (${{ env.UBOOTVER }})"
          files: |
            bl2*.img
            fip*.bin
